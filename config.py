import random

random_device = False

request_device_info = [
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
    {
        'device_name':'Raspberry Pi',
        'computing_intensity':[1568, 615, 600, 1568, 615, 600, 1568, 615, 600], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.2 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':10,
        'cur_energy':10,
        'min_energy_consumption':1.3,
        'max_energy_consumption':6.5,
        'is_request_device':True,
    },
]

local_device_info = [
    {
        'device_name':'Jetson Nano',
        'computing_intensity':[960, 380, 360, 960, 380, 360, 960, 380, 360], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.42 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':20,
        'cur_energy':20,
        'min_energy_consumption':5,
        'max_energy_consumption':10,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson TX2',
        'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':2 * (10**12),
        'memory':2 * 1024 * 1024 * 1024, # Byte
        'max_energy':30,
        'cur_energy':30,
        'min_energy_consumption':7.5,
        'max_energy_consumption':15,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson Nano',
        'computing_intensity':[960, 380, 360, 960, 380, 360, 960, 380, 360], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.42 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':20,
        'cur_energy':20,
        'min_energy_consumption':5,
        'max_energy_consumption':10,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson TX2',
        'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':2 * (10**12),
        'memory':2 * 1024 * 1024 * 1024, # Byte
        'max_energy':30,
        'cur_energy':30,
        'min_energy_consumption':7.5,
        'max_energy_consumption':15,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson Nano',
        'computing_intensity':[960, 380, 360, 960, 380, 360, 960, 380, 360], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.42 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':20,
        'cur_energy':20,
        'min_energy_consumption':5,
        'max_energy_consumption':10,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson TX2',
        'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':2 * (10**12),
        'memory':2 * 1024 * 1024 * 1024, # Byte
        'max_energy':30,
        'cur_energy':30,
        'min_energy_consumption':7.5,
        'max_energy_consumption':15,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson Nano',
        'computing_intensity':[960, 380, 360, 960, 380, 360, 960, 380, 360], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.42 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':20,
        'cur_energy':20,
        'min_energy_consumption':5,
        'max_energy_consumption':10,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson TX2',
        'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':2 * (10**12),
        'memory':2 * 1024 * 1024 * 1024, # Byte
        'max_energy':30,
        'cur_energy':30,
        'min_energy_consumption':7.5,
        'max_energy_consumption':15,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson Nano',
        'computing_intensity':[960, 380, 360, 960, 380, 360, 960, 380, 360], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':1.42 * (10**12),
        'memory':4 * 1024 * 1024 * 1024, # Byte
        'max_energy':20,
        'cur_energy':20,
        'min_energy_consumption':5,
        'max_energy_consumption':10,
        'is_request_device':False,
    },
    {
        'device_name':'Jetson TX2',
        'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':2 * (10**12),
        'memory':2 * 1024 * 1024 * 1024, # Byte
        'max_energy':30,
        'cur_energy':30,
        'min_energy_consumption':7.5,
        'max_energy_consumption':15,
        'is_request_device':False,
    },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
    # {
    #     'device_name':'Jetson TX2',
    #     'computing_intensity':[772, 301, 300, 772, 301, 300, 772, 301, 300], # GoogLeNet, AlexNet, ResNet-50
    #     'computing_frequency':2 * (10**12),
    #     'computing_capacity':1 * (10**12),
    #     'memory':2 * 1024 * 1024 * 1024, # Byte
    #     'max_energy':30,
    #     'cur_energy':30,
    #     'min_energy_consumption':7.5,
    #     'max_energy_consumption':15,
    #     'is_request_device':False,
    # },
]

edge_server_info = [
    {
        'device_name':'Edge Server',
        'computing_intensity':[698, 282, 280, 698, 282, 280, 698, 282, 280], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':3.6 * (10**12),
        'memory':24 * 1024 * 1024 * 1024, # Byte
        'max_energy':300,
        'cur_energy':300,
        'min_energy_consumption':80,
        'max_energy_consumption':200,
        'is_request_device':False,
    },
]

cloud_server_info = [
    {
        'device_name':'Cloud Server',
        'computing_intensity':[698, 282, 280, 698, 282, 280, 698, 282, 280], # GoogLeNet, AlexNet, ResNet-50
        'computing_frequency':100 * (10**12),
        'memory':24 * 1024 * 1024 * 1024, # Byte
        'max_energy':300,
        'cur_energy':300,
        'min_energy_consumption':80,
        'max_energy_consumption':200,
        'is_request_device':False,
    },
]

service_info = [
    {
        'model_name':'ResNet-50',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':7,
                'padding':3,
                'stride':2,
                'output_height':112,
                'output_width':112,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[112*112*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':112,
                'input_width':112,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':56,
                'output_width':56,
                'output_channel':64, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[112*112*64*4],
                'successors':['layer1_bottleneck1_conv1', 'layer1_downsample'],
                'output_data_size':[56*56*64*4, 56*56*64*4],
            },
            {
                'layer_name':'layer1_downsample',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv1', 'layer1_bottleneck3_conv1'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck1_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck1_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv1', 'layer1_bottleneck3_conv1'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv3', 'layer1_downsample'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer1_bottleneck2_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck3_conv1', 'layer2_bottleneck1_conv1', 'layer2_downsample'],
                'output_data_size':[56*56*256*4, 56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck1_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer1_bottleneck3_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck3_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck3_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck3_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer2_bottleneck1_conv1', 'layer2_downsample'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer2_downsample',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':2,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck3_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer2_bottleneck2_conv1'],
                'output_data_size':[28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck3_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer2_bottleneck1_conv2'],
                'output_data_size':[56*56*128*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv1'],
                'input_data_size':[56*56*128*4],
                'successors':['layer2_bottleneck1_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck2_conv1', 'layer2_bottleneck3_conv1'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv3', 'layer2_downsample'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck2_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck2_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck3_conv1', 'layer2_bottleneck4_conv1'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv3', 'layer2_bottleneck2_conv3'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck3_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck3_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck4_conv1', 'layer3_bottleneck1_conv1', 'layer3_downsample'],
                'output_data_size':[28*28*512*4, 28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv3', 'layer2_bottleneck3_conv3'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck4_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck4_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck4_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck4_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer3_bottleneck1_conv1', 'layer3_downsample'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer3_downsample',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':2,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv3', 'layer2_bottleneck4_conv3'],
                'input_data_size':[28*28*256*4, 28*28*256*4],
                'successors':['layer3_bottleneck2_conv1'],
                'output_data_size':[14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv3', 'layer2_bottleneck4_conv3'],
                'input_data_size':[28*28*256*4, 28*28*256*4],
                'successors':['layer3_bottleneck1_conv2'],
                'output_data_size':[28*28*256*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv1'],
                'input_data_size':[28*28*256*4],
                'successors':['layer3_bottleneck1_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck2_conv1', 'layer3_bottleneck3_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv3', 'layer3_downsample'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck2_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck2_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck3_conv1', 'layer3_bottleneck4_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv3', 'layer3_bottleneck2_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck3_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck3_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck4_conv1', 'layer3_bottleneck5_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv3', 'layer3_bottleneck3_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck4_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck4_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck5_conv1', 'layer3_bottleneck6_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv3', 'layer3_bottleneck4_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck5_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck5_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck6_conv1', 'layer4_bottleneck1_conv1', 'layer4_downsample'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv3', 'layer3_bottleneck5_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck6_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck6_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck6_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck6_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer4_bottleneck1_conv1', 'layer4_downsample'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer4_downsample',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv3', 'layer3_bottleneck6_conv3'],
                'input_data_size':[14*14*512*4, 14*14*512*4],
                'successors':['layer4_bottleneck2_conv1'],
                'output_data_size':[7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv3', 'layer3_bottleneck6_conv3'],
                'input_data_size':[14*14*512*4, 14*14*512*4],
                'successors':['layer4_bottleneck1_conv2'],
                'output_data_size':[14*14*512*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv1'],
                'input_data_size':[14*14*512*4],
                'successors':['layer4_bottleneck1_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck2_conv1', 'layer4_bottleneck3_conv1'],
                'output_data_size':[7*7*2048*4, 7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv3', 'layer4_downsample'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['layer4_bottleneck2_conv2'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv1'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck2_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck3_conv1', 'avgpool1'],
                'output_data_size':[7*7*2048*4, 7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv3', 'layer4_bottleneck2_conv3'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['layer4_bottleneck3_conv2'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck3_conv1'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck3_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck3_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['avgpool1'],
                'output_data_size':[7*7*2048*4],
            },
            {
                'layer_name':'avgpool1',
                'layer_type':'avgpool',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':7,
                'padding':0,
                'stride':1,
                'output_height':1,
                'output_width':1,
                'output_channel':2048, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv3', 'layer4_bottleneck3_conv3'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['fully_connected'],
                'output_data_size':[2048*4],
            },
            {
                'layer_name':'fully_connected',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':2048,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['avgpool1'],
                'input_data_size':[2048*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
    {
        'model_name':'GoogLeNet',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':7,
                'padding':3,
                'stride':2,
                'output_height':112,
                'output_width':112,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[112*112*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':112,
                'input_width':112,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':55,
                'output_width':55,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[112*112*64*4],
                'successors':['conv2'],
                'output_data_size':[55*55*64*4],
            },
            {
                'layer_name':'conv2',
                'layer_type':'cnn',
                'input_height':55,
                'input_width':55,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':55,
                'output_width':55,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[55*55*64*4],
                'successors':['conv3'],
                'output_data_size':[55*55*64*4],
            },
            {
                'layer_name':'conv3',
                'layer_type':'cnn',
                'input_height':55,
                'input_width':55,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':55,
                'output_width':55,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv2'],
                'input_data_size':[55*55*64*4],
                'successors':['maxpool2'],
                'output_data_size':[55*55*192*4],
            },
            {
                'layer_name':'maxpool2',
                'layer_type':'maxpool',
                'input_height':55,
                'input_width':55,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv3'],
                'input_data_size':[55*55*192*4],
                'successors':['inception3a_branch1_conv1', 'inception3a_branch2_conv1', 'inception3a_branch3_conv1', 'inception3a_branch4_maxpool1'],
                'output_data_size':[27*27*192*4, 27*27*192*4, 27*27*192*4, 27*27*192*4],
            },
            {
                'layer_name':'inception3a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*64*4, 27*27*64*4, 27*27*64*4, 27*27*64*4],
            },
            {
                'layer_name':'inception3a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch2_conv2'],
                'output_data_size':[27*27*96*4],
            },
            {
                'layer_name':'inception3a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':96,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch2_conv1'],
                'input_data_size':[27*27*96*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*128*4, 27*27*128*4, 27*27*128*4, 27*27*128*4],
            },
            {
                'layer_name':'inception3a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':16, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch3_conv2'],
                'output_data_size':[27*27*16*4],
            },
            {
                'layer_name':'inception3a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':16,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch3_conv1'],
                'input_data_size':[27*27*16*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*32*4, 27*27*32*4, 27*27*32*4, 27*27*32*4],
            },
            {
                'layer_name':'inception3a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch4_conv1'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'inception3a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch4_maxpool1'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*32*4, 27*27*32*4, 27*27*32*4, 27*27*32*4],
            },
            {
                'layer_name':'inception3b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch1_maxpool1'],
                'output_data_size':[27*27*128*4],
            },
            {
                'layer_name':'inception3b_branch1_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_conv1'],
                'input_data_size':[27*27*128*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*128*4, 13*13*128*4, 13*13*128*4, 13*13*128*4],
            },
            {
                'layer_name':'inception3b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch2_conv2'],
                'output_data_size':[27*27*128*4],
            },
            {
                'layer_name':'inception3b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch2_conv1'],
                'input_data_size':[27*27*128*4],
                'successors':['inception3b_branch2_maxpool1'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'inception3b_branch2_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch2_conv2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*192*4, 13*13*192*4, 13*13*192*4, 13*13*192*4],
            },
            {
                'layer_name':'inception3b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch3_conv2'],
                'output_data_size':[27*27*32*4],
            },
            {
                'layer_name':'inception3b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch3_conv1'],
                'input_data_size':[27*27*32*4],
                'successors':['inception3b_branch3_maxpool1'],
                'output_data_size':[27*27*96*4],
            },
            {
                'layer_name':'inception3b_branch3_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':96,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch3_conv2'],
                'input_data_size':[27*27*96*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*96*4, 13*13*96*4, 13*13*96*4, 13*13*96*4],
            },
            {
                'layer_name':'inception3b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch4_conv1'],
                'output_data_size':[27*27*256*4],
            },
            {
                'layer_name':'inception3b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch4_maxpool1'],
                'input_data_size':[27*27*256*4],
                'successors':['inception3b_branch4_maxpool2'],
                'output_data_size':[27*27*64*4],
            },
            {
                'layer_name':'inception3b_branch4_maxpool2',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch4_conv1'],
                'input_data_size':[27*27*64*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*192*4, 13*13*192*4, 13*13*192*4, 13*13*192*4],
            },
            {
                'layer_name':'inception4a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch2_conv2'],
                'output_data_size':[13*13*96*4],
            },
            {
                'layer_name':'inception4a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':96,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':208, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch2_conv1'],
                'input_data_size':[13*13*96*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*208*4, 13*13*208*4, 13*13*208*4, 13*13*208*4],
            },
            {
                'layer_name':'inception4a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':16, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch3_conv2'],
                'output_data_size':[13*13*16*4],
            },
            {
                'layer_name':'inception4a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':16,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':48, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch3_conv1'],
                'input_data_size':[13*13*16*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*48*4, 13*13*48*4, 13*13*48*4, 13*13*48*4],
            },
            {
                'layer_name':'inception4a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':480, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch4_conv1'],
                'output_data_size':[13*13*480*4],
            },
            {
                'layer_name':'inception4a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch4_maxpool1'],
                'input_data_size':[13*13*480*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*160*4, 13*13*160*4, 13*13*160*4, 13*13*160*4],
            },
            {
                'layer_name':'inception4b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':112, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch2_conv2'],
                'output_data_size':[13*13*112*4],
            },
            {
                'layer_name':'inception4b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':112,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':224, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*224*4, 13*13*224*4, 13*13*224*4, 13*13*224*4],
            },
            {
                'layer_name':'inception4b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':24, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch3_conv2'],
                'output_data_size':[13*13*24*4],
            },
            {
                'layer_name':'inception4b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':24,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4c_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*128*4, 13*13*128*4, 13*13*128*4, 13*13*128*4],
            },
            {
                'layer_name':'inception4c_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch2_conv2'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4c_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*256*4, 13*13*256*4, 13*13*256*4, 13*13*256*4],
            },
            {
                'layer_name':'inception4c_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':24, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch3_conv2'],
                'output_data_size':[13*13*24*4],
            },
            {
                'layer_name':'inception4c_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':24,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4c_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4c_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4d_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':112, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*112*4, 13*13*112*4, 13*13*112*4, 13*13*112*4],
            },
            {
                'layer_name':'inception4d_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':144, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch2_conv2'],
                'output_data_size':[13*13*144*4],
            },
            {
                'layer_name':'inception4d_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':144,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':288, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*288*4, 13*13*288*4, 13*13*288*4, 13*13*288*4],
            },
            {
                'layer_name':'inception4d_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch3_conv2'],
                'output_data_size':[13*13*32*4],
            },
            {
                'layer_name':'inception4d_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4d_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4d_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4e_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch1_maxpool1'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'inception4e_branch1_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_conv1'],
                'input_data_size':[13*13*256*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*256*4, 6*6*256*4, 6*6*256*4, 6*6*256*4],
            },
            {
                'layer_name':'inception4e_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch2_conv2'],
                'output_data_size':[13*13*160*4],
            },
            {
                'layer_name':'inception4e_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':160,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch2_conv1'],
                'input_data_size':[13*13*160*4],
                'successors':['inception4e_branch2_maxpool1'],
                'output_data_size':[13*13*320*4],
            },
            {
                'layer_name':'inception4e_branch2_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':320,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch2_conv2'],
                'input_data_size':[13*13*320*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*320*4, 6*6*320*4, 6*6*320*4, 6*6*320*4],
            },
            {
                'layer_name':'inception4e_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch3_conv2'],
                'output_data_size':[13*13*32*4],
            },
            {
                'layer_name':'inception4e_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch3_conv1'],
                'input_data_size':[13*13*32*4],
                'successors':['inception4e_branch3_maxpool1'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4e_branch3_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch3_conv2'],
                'input_data_size':[13*13*128*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception4e_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':528, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch4_conv1'],
                'output_data_size':[13*13*528*4],
            },
            {
                'layer_name':'inception4e_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch4_maxpool1'],
                'input_data_size':[13*13*256*4],
                'successors':['inception4e_branch4_maxpool2'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4e_branch4_maxpool2',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch4_conv1'],
                'input_data_size':[13*13*128*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*256*4, 6*6*256*4, 6*6*256*4, 6*6*256*4],
            },
            {
                'layer_name':'inception5a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch2_conv2'],
                'output_data_size':[6*6*160*4],
            },
            {
                'layer_name':'inception5a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':160,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch2_conv1'],
                'input_data_size':[6*6*160*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*320*4, 6*6*320*4, 6*6*320*4, 6*6*320*4],
            },
            {
                'layer_name':'inception5a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch3_conv2'],
                'output_data_size':[6*6*32*4],
            },
            {
                'layer_name':'inception5a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch3_conv1'],
                'input_data_size':[6*6*32*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':832, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch4_conv1'],
                'output_data_size':[6*6*832*4],
            },
            {
                'layer_name':'inception5a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch4_maxpool1'],
                'input_data_size':[6*6*832*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':384, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*384*4],
            },
            {
                'layer_name':'inception5b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch2_conv2'],
                'output_data_size':[6*6*192*4],
            },
            {
                'layer_name':'inception5b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':384, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch2_conv1'],
                'input_data_size':[6*6*192*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*384*4],
            },
            {
                'layer_name':'inception5b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':48, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch3_conv2'],
                'output_data_size':[6*6*48*4],
            },
            {
                'layer_name':'inception5b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':48,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch3_conv1'],
                'input_data_size':[6*6*48*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*128*4],
            },
            {
                'layer_name':'inception5b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':832, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch4_conv1'],
                'output_data_size':[6*6*832*4],
            },
            {
                'layer_name':'inception5b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch4_maxpool1'],
                'input_data_size':[6*6*832*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*128*4],
            },
            {
                'layer_name':'fully_connected',
                'layer_type':'fc',
                'is_first_fc':True,
                'input_height':6,
                'input_width':6,
                'input_channel':1024,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch1_conv1', 'inception5b_branch2_conv2', 'inception5b_branch3_conv2', 'inception5b_branch4_conv1'],
                'input_data_size':[6*6*384*4, 6*6*384*4, 6*6*128*4, 6*6*128*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
    {
        'model_name':'AlexNet',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':11,
                'padding':5,
                'stride':4,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['conv2'],
                'output_data_size':[27*27*64*4],
            },
            {
                'layer_name':'conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':64,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[27*27*64*4],
                'successors':['maxpool2'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'maxpool2',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv2'],
                'input_data_size':[27*27*192*4],
                'successors':['conv3'],
                'output_data_size':[13*13*192*4],
            },
            {
                'layer_name':'conv3',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':384, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[13*13*192*4],
                'successors':['conv4'],
                'output_data_size':[13*13*384*4],
            },
            {
                'layer_name':'conv4',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':384,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv3'],
                'input_data_size':[13*13*384*4],
                'successors':['conv5'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'conv5',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv4'],
                'input_data_size':[13*13*256*4],
                'successors':['maxpool3'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'maxpool3',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv5'],
                'input_data_size':[13*13*256*4],
                'successors':['fc1'],
                'output_data_size':[6*6*256*4],
            },
            {
                'layer_name':'fc1',
                'layer_type':'fc',
                'is_first_fc':True,
                'input_height':6,
                'input_width':6,
                'input_channel':256,
                'output_height':1,
                'output_width':1,
                'output_channel':4096, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool3'],
                'input_data_size':[6*6*256*4],
                'successors':['fc2'],
                'output_data_size':[4096*4],
            },
            {
                'layer_name':'fc2',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':4096,
                'output_height':1,
                'output_width':1,
                'output_channel':4096, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['fc1'],
                'input_data_size':[4096*4],
                'successors':['fc3'],
                'output_data_size':[4096*4],
            },
            {
                'layer_name':'fc3',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':4096,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['fc2'],
                'input_data_size':[4096*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
    {
        'model_name':'ResNet-50',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':7,
                'padding':3,
                'stride':2,
                'output_height':112,
                'output_width':112,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[112*112*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':112,
                'input_width':112,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':56,
                'output_width':56,
                'output_channel':64, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[112*112*64*4],
                'successors':['layer1_bottleneck1_conv1', 'layer1_downsample'],
                'output_data_size':[56*56*64*4, 56*56*64*4],
            },
            {
                'layer_name':'layer1_downsample',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv1', 'layer1_bottleneck3_conv1'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck1_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck1_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv1', 'layer1_bottleneck3_conv1'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv3', 'layer1_downsample'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer1_bottleneck2_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck3_conv1', 'layer2_bottleneck1_conv1', 'layer2_downsample'],
                'output_data_size':[56*56*256*4, 56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck1_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer1_bottleneck3_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck3_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck3_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck3_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer2_bottleneck1_conv1', 'layer2_downsample'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer2_downsample',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':2,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck3_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer2_bottleneck2_conv1'],
                'output_data_size':[28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck3_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer2_bottleneck1_conv2'],
                'output_data_size':[56*56*128*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv1'],
                'input_data_size':[56*56*128*4],
                'successors':['layer2_bottleneck1_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck2_conv1', 'layer2_bottleneck3_conv1'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv3', 'layer2_downsample'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck2_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck2_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck3_conv1', 'layer2_bottleneck4_conv1'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv3', 'layer2_bottleneck2_conv3'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck3_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck3_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck4_conv1', 'layer3_bottleneck1_conv1', 'layer3_downsample'],
                'output_data_size':[28*28*512*4, 28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv3', 'layer2_bottleneck3_conv3'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck4_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck4_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck4_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck4_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer3_bottleneck1_conv1', 'layer3_downsample'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer3_downsample',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':2,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv3', 'layer2_bottleneck4_conv3'],
                'input_data_size':[28*28*256*4, 28*28*256*4],
                'successors':['layer3_bottleneck2_conv1'],
                'output_data_size':[14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv3', 'layer2_bottleneck4_conv3'],
                'input_data_size':[28*28*256*4, 28*28*256*4],
                'successors':['layer3_bottleneck1_conv2'],
                'output_data_size':[28*28*256*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv1'],
                'input_data_size':[28*28*256*4],
                'successors':['layer3_bottleneck1_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck2_conv1', 'layer3_bottleneck3_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv3', 'layer3_downsample'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck2_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck2_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck3_conv1', 'layer3_bottleneck4_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv3', 'layer3_bottleneck2_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck3_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck3_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck4_conv1', 'layer3_bottleneck5_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv3', 'layer3_bottleneck3_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck4_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck4_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck5_conv1', 'layer3_bottleneck6_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv3', 'layer3_bottleneck4_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck5_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck5_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck6_conv1', 'layer4_bottleneck1_conv1', 'layer4_downsample'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv3', 'layer3_bottleneck5_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck6_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck6_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck6_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck6_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer4_bottleneck1_conv1', 'layer4_downsample'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer4_downsample',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv3', 'layer3_bottleneck6_conv3'],
                'input_data_size':[14*14*512*4, 14*14*512*4],
                'successors':['layer4_bottleneck2_conv1'],
                'output_data_size':[7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv3', 'layer3_bottleneck6_conv3'],
                'input_data_size':[14*14*512*4, 14*14*512*4],
                'successors':['layer4_bottleneck1_conv2'],
                'output_data_size':[14*14*512*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv1'],
                'input_data_size':[14*14*512*4],
                'successors':['layer4_bottleneck1_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck2_conv1', 'layer4_bottleneck3_conv1'],
                'output_data_size':[7*7*2048*4, 7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv3', 'layer4_downsample'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['layer4_bottleneck2_conv2'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv1'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck2_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck3_conv1', 'avgpool1'],
                'output_data_size':[7*7*2048*4, 7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv3', 'layer4_bottleneck2_conv3'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['layer4_bottleneck3_conv2'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck3_conv1'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck3_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck3_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['avgpool1'],
                'output_data_size':[7*7*2048*4],
            },
            {
                'layer_name':'avgpool1',
                'layer_type':'avgpool',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':7,
                'padding':0,
                'stride':1,
                'output_height':1,
                'output_width':1,
                'output_channel':2048, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv3', 'layer4_bottleneck3_conv3'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['fully_connected'],
                'output_data_size':[2048*4],
            },
            {
                'layer_name':'fully_connected',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':2048,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['avgpool1'],
                'input_data_size':[2048*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
    {
        'model_name':'GoogLeNet',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':7,
                'padding':3,
                'stride':2,
                'output_height':112,
                'output_width':112,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[112*112*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':112,
                'input_width':112,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':55,
                'output_width':55,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[112*112*64*4],
                'successors':['conv2'],
                'output_data_size':[55*55*64*4],
            },
            {
                'layer_name':'conv2',
                'layer_type':'cnn',
                'input_height':55,
                'input_width':55,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':55,
                'output_width':55,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[55*55*64*4],
                'successors':['conv3'],
                'output_data_size':[55*55*64*4],
            },
            {
                'layer_name':'conv3',
                'layer_type':'cnn',
                'input_height':55,
                'input_width':55,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':55,
                'output_width':55,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv2'],
                'input_data_size':[55*55*64*4],
                'successors':['maxpool2'],
                'output_data_size':[55*55*192*4],
            },
            {
                'layer_name':'maxpool2',
                'layer_type':'maxpool',
                'input_height':55,
                'input_width':55,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv3'],
                'input_data_size':[55*55*192*4],
                'successors':['inception3a_branch1_conv1', 'inception3a_branch2_conv1', 'inception3a_branch3_conv1', 'inception3a_branch4_maxpool1'],
                'output_data_size':[27*27*192*4, 27*27*192*4, 27*27*192*4, 27*27*192*4],
            },
            {
                'layer_name':'inception3a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*64*4, 27*27*64*4, 27*27*64*4, 27*27*64*4],
            },
            {
                'layer_name':'inception3a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch2_conv2'],
                'output_data_size':[27*27*96*4],
            },
            {
                'layer_name':'inception3a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':96,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch2_conv1'],
                'input_data_size':[27*27*96*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*128*4, 27*27*128*4, 27*27*128*4, 27*27*128*4],
            },
            {
                'layer_name':'inception3a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':16, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch3_conv2'],
                'output_data_size':[27*27*16*4],
            },
            {
                'layer_name':'inception3a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':16,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch3_conv1'],
                'input_data_size':[27*27*16*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*32*4, 27*27*32*4, 27*27*32*4, 27*27*32*4],
            },
            {
                'layer_name':'inception3a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch4_conv1'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'inception3a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch4_maxpool1'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*32*4, 27*27*32*4, 27*27*32*4, 27*27*32*4],
            },
            {
                'layer_name':'inception3b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch1_maxpool1'],
                'output_data_size':[27*27*128*4],
            },
            {
                'layer_name':'inception3b_branch1_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_conv1'],
                'input_data_size':[27*27*128*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*128*4, 13*13*128*4, 13*13*128*4, 13*13*128*4],
            },
            {
                'layer_name':'inception3b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch2_conv2'],
                'output_data_size':[27*27*128*4],
            },
            {
                'layer_name':'inception3b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch2_conv1'],
                'input_data_size':[27*27*128*4],
                'successors':['inception3b_branch2_maxpool1'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'inception3b_branch2_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch2_conv2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*192*4, 13*13*192*4, 13*13*192*4, 13*13*192*4],
            },
            {
                'layer_name':'inception3b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch3_conv2'],
                'output_data_size':[27*27*32*4],
            },
            {
                'layer_name':'inception3b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch3_conv1'],
                'input_data_size':[27*27*32*4],
                'successors':['inception3b_branch3_maxpool1'],
                'output_data_size':[27*27*96*4],
            },
            {
                'layer_name':'inception3b_branch3_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':96,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch3_conv2'],
                'input_data_size':[27*27*96*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*96*4, 13*13*96*4, 13*13*96*4, 13*13*96*4],
            },
            {
                'layer_name':'inception3b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch4_conv1'],
                'output_data_size':[27*27*256*4],
            },
            {
                'layer_name':'inception3b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch4_maxpool1'],
                'input_data_size':[27*27*256*4],
                'successors':['inception3b_branch4_maxpool2'],
                'output_data_size':[27*27*64*4],
            },
            {
                'layer_name':'inception3b_branch4_maxpool2',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch4_conv1'],
                'input_data_size':[27*27*64*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*192*4, 13*13*192*4, 13*13*192*4, 13*13*192*4],
            },
            {
                'layer_name':'inception4a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch2_conv2'],
                'output_data_size':[13*13*96*4],
            },
            {
                'layer_name':'inception4a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':96,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':208, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch2_conv1'],
                'input_data_size':[13*13*96*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*208*4, 13*13*208*4, 13*13*208*4, 13*13*208*4],
            },
            {
                'layer_name':'inception4a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':16, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch3_conv2'],
                'output_data_size':[13*13*16*4],
            },
            {
                'layer_name':'inception4a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':16,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':48, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch3_conv1'],
                'input_data_size':[13*13*16*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*48*4, 13*13*48*4, 13*13*48*4, 13*13*48*4],
            },
            {
                'layer_name':'inception4a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':480, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch4_conv1'],
                'output_data_size':[13*13*480*4],
            },
            {
                'layer_name':'inception4a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch4_maxpool1'],
                'input_data_size':[13*13*480*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*160*4, 13*13*160*4, 13*13*160*4, 13*13*160*4],
            },
            {
                'layer_name':'inception4b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':112, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch2_conv2'],
                'output_data_size':[13*13*112*4],
            },
            {
                'layer_name':'inception4b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':112,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':224, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*224*4, 13*13*224*4, 13*13*224*4, 13*13*224*4],
            },
            {
                'layer_name':'inception4b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':24, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch3_conv2'],
                'output_data_size':[13*13*24*4],
            },
            {
                'layer_name':'inception4b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':24,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4c_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*128*4, 13*13*128*4, 13*13*128*4, 13*13*128*4],
            },
            {
                'layer_name':'inception4c_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch2_conv2'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4c_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*256*4, 13*13*256*4, 13*13*256*4, 13*13*256*4],
            },
            {
                'layer_name':'inception4c_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':24, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch3_conv2'],
                'output_data_size':[13*13*24*4],
            },
            {
                'layer_name':'inception4c_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':24,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4c_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4c_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4d_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':112, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*112*4, 13*13*112*4, 13*13*112*4, 13*13*112*4],
            },
            {
                'layer_name':'inception4d_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':144, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch2_conv2'],
                'output_data_size':[13*13*144*4],
            },
            {
                'layer_name':'inception4d_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':144,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':288, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*288*4, 13*13*288*4, 13*13*288*4, 13*13*288*4],
            },
            {
                'layer_name':'inception4d_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch3_conv2'],
                'output_data_size':[13*13*32*4],
            },
            {
                'layer_name':'inception4d_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4d_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4d_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4e_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch1_maxpool1'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'inception4e_branch1_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_conv1'],
                'input_data_size':[13*13*256*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*256*4, 6*6*256*4, 6*6*256*4, 6*6*256*4],
            },
            {
                'layer_name':'inception4e_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch2_conv2'],
                'output_data_size':[13*13*160*4],
            },
            {
                'layer_name':'inception4e_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':160,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch2_conv1'],
                'input_data_size':[13*13*160*4],
                'successors':['inception4e_branch2_maxpool1'],
                'output_data_size':[13*13*320*4],
            },
            {
                'layer_name':'inception4e_branch2_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':320,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch2_conv2'],
                'input_data_size':[13*13*320*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*320*4, 6*6*320*4, 6*6*320*4, 6*6*320*4],
            },
            {
                'layer_name':'inception4e_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch3_conv2'],
                'output_data_size':[13*13*32*4],
            },
            {
                'layer_name':'inception4e_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch3_conv1'],
                'input_data_size':[13*13*32*4],
                'successors':['inception4e_branch3_maxpool1'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4e_branch3_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch3_conv2'],
                'input_data_size':[13*13*128*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception4e_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':528, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch4_conv1'],
                'output_data_size':[13*13*528*4],
            },
            {
                'layer_name':'inception4e_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch4_maxpool1'],
                'input_data_size':[13*13*256*4],
                'successors':['inception4e_branch4_maxpool2'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4e_branch4_maxpool2',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch4_conv1'],
                'input_data_size':[13*13*128*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*256*4, 6*6*256*4, 6*6*256*4, 6*6*256*4],
            },
            {
                'layer_name':'inception5a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch2_conv2'],
                'output_data_size':[6*6*160*4],
            },
            {
                'layer_name':'inception5a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':160,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch2_conv1'],
                'input_data_size':[6*6*160*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*320*4, 6*6*320*4, 6*6*320*4, 6*6*320*4],
            },
            {
                'layer_name':'inception5a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch3_conv2'],
                'output_data_size':[6*6*32*4],
            },
            {
                'layer_name':'inception5a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch3_conv1'],
                'input_data_size':[6*6*32*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':832, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch4_conv1'],
                'output_data_size':[6*6*832*4],
            },
            {
                'layer_name':'inception5a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch4_maxpool1'],
                'input_data_size':[6*6*832*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':384, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*384*4],
            },
            {
                'layer_name':'inception5b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch2_conv2'],
                'output_data_size':[6*6*192*4],
            },
            {
                'layer_name':'inception5b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':384, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch2_conv1'],
                'input_data_size':[6*6*192*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*384*4],
            },
            {
                'layer_name':'inception5b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':48, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch3_conv2'],
                'output_data_size':[6*6*48*4],
            },
            {
                'layer_name':'inception5b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':48,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch3_conv1'],
                'input_data_size':[6*6*48*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*128*4],
            },
            {
                'layer_name':'inception5b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':832, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch4_conv1'],
                'output_data_size':[6*6*832*4],
            },
            {
                'layer_name':'inception5b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch4_maxpool1'],
                'input_data_size':[6*6*832*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*128*4],
            },
            {
                'layer_name':'fully_connected',
                'layer_type':'fc',
                'is_first_fc':True,
                'input_height':6,
                'input_width':6,
                'input_channel':1024,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch1_conv1', 'inception5b_branch2_conv2', 'inception5b_branch3_conv2', 'inception5b_branch4_conv1'],
                'input_data_size':[6*6*384*4, 6*6*384*4, 6*6*128*4, 6*6*128*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
    {
        'model_name':'AlexNet',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':11,
                'padding':5,
                'stride':4,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['conv2'],
                'output_data_size':[27*27*64*4],
            },
            {
                'layer_name':'conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':64,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[27*27*64*4],
                'successors':['maxpool2'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'maxpool2',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv2'],
                'input_data_size':[27*27*192*4],
                'successors':['conv3'],
                'output_data_size':[13*13*192*4],
            },
            {
                'layer_name':'conv3',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':384, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[13*13*192*4],
                'successors':['conv4'],
                'output_data_size':[13*13*384*4],
            },
            {
                'layer_name':'conv4',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':384,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv3'],
                'input_data_size':[13*13*384*4],
                'successors':['conv5'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'conv5',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv4'],
                'input_data_size':[13*13*256*4],
                'successors':['maxpool3'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'maxpool3',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv5'],
                'input_data_size':[13*13*256*4],
                'successors':['fc1'],
                'output_data_size':[6*6*256*4],
            },
            {
                'layer_name':'fc1',
                'layer_type':'fc',
                'is_first_fc':True,
                'input_height':6,
                'input_width':6,
                'input_channel':256,
                'output_height':1,
                'output_width':1,
                'output_channel':4096, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool3'],
                'input_data_size':[6*6*256*4],
                'successors':['fc2'],
                'output_data_size':[4096*4],
            },
            {
                'layer_name':'fc2',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':4096,
                'output_height':1,
                'output_width':1,
                'output_channel':4096, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['fc1'],
                'input_data_size':[4096*4],
                'successors':['fc3'],
                'output_data_size':[4096*4],
            },
            {
                'layer_name':'fc3',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':4096,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['fc2'],
                'input_data_size':[4096*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
    {
        'model_name':'ResNet-50',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':7,
                'padding':3,
                'stride':2,
                'output_height':112,
                'output_width':112,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[112*112*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':112,
                'input_width':112,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':56,
                'output_width':56,
                'output_channel':64, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[112*112*64*4],
                'successors':['layer1_bottleneck1_conv1', 'layer1_downsample'],
                'output_data_size':[56*56*64*4, 56*56*64*4],
            },
            {
                'layer_name':'layer1_downsample',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv1', 'layer1_bottleneck3_conv1'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck1_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck1_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv1', 'layer1_bottleneck3_conv1'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck1_conv3', 'layer1_downsample'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer1_bottleneck2_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck2_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck3_conv1', 'layer2_bottleneck1_conv1', 'layer2_downsample'],
                'output_data_size':[56*56*256*4, 56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck1_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer1_bottleneck3_conv2'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck3_conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['layer1_bottleneck3_conv3'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'layer1_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck3_conv2'],
                'input_data_size':[56*56*64*4],
                'successors':['layer2_bottleneck1_conv1', 'layer2_downsample'],
                'output_data_size':[56*56*256*4, 56*56*256*4],
            },
            {
                'layer_name':'layer2_downsample',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':2,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck3_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer2_bottleneck2_conv1'],
                'output_data_size':[28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':56,
                'output_width':56,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer1_bottleneck2_conv3', 'layer1_bottleneck3_conv3'],
                'input_data_size':[56*56*256*4, 56*56*256*4],
                'successors':['layer2_bottleneck1_conv2'],
                'output_data_size':[56*56*128*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':56,
                'input_width':56,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv1'],
                'input_data_size':[56*56*128*4],
                'successors':['layer2_bottleneck1_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck2_conv1', 'layer2_bottleneck3_conv1'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv3', 'layer2_downsample'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck2_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck2_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck3_conv1', 'layer2_bottleneck4_conv1'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck1_conv3', 'layer2_bottleneck2_conv3'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck3_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck3_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck4_conv1', 'layer3_bottleneck1_conv1', 'layer3_downsample'],
                'output_data_size':[28*28*512*4, 28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck2_conv3', 'layer2_bottleneck3_conv3'],
                'input_data_size':[28*28*512*4, 28*28*512*4],
                'successors':['layer2_bottleneck4_conv2'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':128,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck4_conv1'],
                'input_data_size':[28*28*128*4],
                'successors':['layer2_bottleneck4_conv3'],
                'output_data_size':[28*28*128*4],
            },
            {
                'layer_name':'layer2_bottleneck4_conv3',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':128,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck4_conv2'],
                'input_data_size':[28*28*128*4],
                'successors':['layer3_bottleneck1_conv1', 'layer3_downsample'],
                'output_data_size':[28*28*512*4, 28*28*512*4],
            },
            {
                'layer_name':'layer3_downsample',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':2,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv3', 'layer2_bottleneck4_conv3'],
                'input_data_size':[28*28*256*4, 28*28*256*4],
                'successors':['layer3_bottleneck2_conv1'],
                'output_data_size':[14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':28,
                'output_width':28,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer2_bottleneck3_conv3', 'layer2_bottleneck4_conv3'],
                'input_data_size':[28*28*256*4, 28*28*256*4],
                'successors':['layer3_bottleneck1_conv2'],
                'output_data_size':[28*28*256*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':28,
                'input_width':28,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':2,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv1'],
                'input_data_size':[28*28*256*4],
                'successors':['layer3_bottleneck1_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck2_conv1', 'layer3_bottleneck3_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv3', 'layer3_downsample'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck2_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck2_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck3_conv1', 'layer3_bottleneck4_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck1_conv3', 'layer3_bottleneck2_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck3_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck3_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck4_conv1', 'layer3_bottleneck5_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck2_conv3', 'layer3_bottleneck3_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck4_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck4_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck4_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck5_conv1', 'layer3_bottleneck6_conv1'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck3_conv3', 'layer3_bottleneck4_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck5_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck5_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck5_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck6_conv1', 'layer4_bottleneck1_conv1', 'layer4_downsample'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':1024,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck4_conv3', 'layer3_bottleneck5_conv3'],
                'input_data_size':[14*14*1024*4, 14*14*1024*4],
                'successors':['layer3_bottleneck6_conv2'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':256,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck6_conv1'],
                'input_data_size':[14*14*256*4],
                'successors':['layer3_bottleneck6_conv3'],
                'output_data_size':[14*14*256*4],
            },
            {
                'layer_name':'layer3_bottleneck6_conv3',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':1024,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer3_bottleneck6_conv2'],
                'input_data_size':[14*14*256*4],
                'successors':['layer4_bottleneck1_conv1', 'layer4_downsample'],
                'output_data_size':[14*14*1024*4, 14*14*1024*4],
            },
            {
                'layer_name':'layer4_downsample',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv3', 'layer3_bottleneck6_conv3'],
                'input_data_size':[14*14*512*4, 14*14*512*4],
                'successors':['layer4_bottleneck2_conv1'],
                'output_data_size':[7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv1',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':14,
                'output_width':14,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer3_bottleneck5_conv3', 'layer3_bottleneck6_conv3'],
                'input_data_size':[14*14*512*4, 14*14*512*4],
                'successors':['layer4_bottleneck1_conv2'],
                'output_data_size':[14*14*512*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv2',
                'layer_type':'cnn',
                'input_height':14,
                'input_width':14,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv1'],
                'input_data_size':[14*14*512*4],
                'successors':['layer4_bottleneck1_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck1_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck2_conv1', 'layer4_bottleneck3_conv1'],
                'output_data_size':[7*7*2048*4, 7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv1',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv3', 'layer4_downsample'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['layer4_bottleneck2_conv2'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv2',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv1'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck2_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck2_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck3_conv1', 'avgpool1'],
                'output_data_size':[7*7*2048*4, 7*7*2048*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv1',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck1_conv3', 'layer4_bottleneck2_conv3'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['layer4_bottleneck3_conv2'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv2',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':512,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck3_conv1'],
                'input_data_size':[7*7*512*4],
                'successors':['layer4_bottleneck3_conv3'],
                'output_data_size':[7*7*512*4],
            },
            {
                'layer_name':'layer4_bottleneck3_conv3',
                'layer_type':'cnn',
                'input_height':7,
                'input_width':7,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':7,
                'output_width':7,
                'output_channel':2048,
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.20486))*1024*1024*1024,
                'predecessors':['layer4_bottleneck3_conv2'],
                'input_data_size':[7*7*512*4],
                'successors':['avgpool1'],
                'output_data_size':[7*7*2048*4],
            },
            {
                'layer_name':'avgpool1',
                'layer_type':'avgpool',
                'input_height':7,
                'input_width':7,
                'input_channel':2048,
                'kernel':7,
                'padding':0,
                'stride':1,
                'output_height':1,
                'output_width':1,
                'output_channel':2048, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['layer4_bottleneck2_conv3', 'layer4_bottleneck3_conv3'],
                'input_data_size':[7*7*2048*4, 7*7*2048*4],
                'successors':['fully_connected'],
                'output_data_size':[2048*4],
            },
            {
                'layer_name':'fully_connected',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':2048,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.32,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['avgpool1'],
                'input_data_size':[2048*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
    {
        'model_name':'GoogLeNet',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':7,
                'padding':3,
                'stride':2,
                'output_height':112,
                'output_width':112,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[112*112*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':112,
                'input_width':112,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':55,
                'output_width':55,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[112*112*64*4],
                'successors':['conv2'],
                'output_data_size':[55*55*64*4],
            },
            {
                'layer_name':'conv2',
                'layer_type':'cnn',
                'input_height':55,
                'input_width':55,
                'input_channel':64,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':55,
                'output_width':55,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[55*55*64*4],
                'successors':['conv3'],
                'output_data_size':[55*55*64*4],
            },
            {
                'layer_name':'conv3',
                'layer_type':'cnn',
                'input_height':55,
                'input_width':55,
                'input_channel':64,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':55,
                'output_width':55,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv2'],
                'input_data_size':[55*55*64*4],
                'successors':['maxpool2'],
                'output_data_size':[55*55*192*4],
            },
            {
                'layer_name':'maxpool2',
                'layer_type':'maxpool',
                'input_height':55,
                'input_width':55,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv3'],
                'input_data_size':[55*55*192*4],
                'successors':['inception3a_branch1_conv1', 'inception3a_branch2_conv1', 'inception3a_branch3_conv1', 'inception3a_branch4_maxpool1'],
                'output_data_size':[27*27*192*4, 27*27*192*4, 27*27*192*4, 27*27*192*4],
            },
            {
                'layer_name':'inception3a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*64*4, 27*27*64*4, 27*27*64*4, 27*27*64*4],
            },
            {
                'layer_name':'inception3a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch2_conv2'],
                'output_data_size':[27*27*96*4],
            },
            {
                'layer_name':'inception3a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':96,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch2_conv1'],
                'input_data_size':[27*27*96*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*128*4, 27*27*128*4, 27*27*128*4, 27*27*128*4],
            },
            {
                'layer_name':'inception3a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':16, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch3_conv2'],
                'output_data_size':[27*27*16*4],
            },
            {
                'layer_name':'inception3a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':16,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch3_conv1'],
                'input_data_size':[27*27*16*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*32*4, 27*27*32*4, 27*27*32*4, 27*27*32*4],
            },
            {
                'layer_name':'inception3a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3a_branch4_conv1'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'inception3a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch4_maxpool1'],
                'input_data_size':[27*27*192*4],
                'successors':['inception3b_branch1_conv1', 'inception3b_branch2_conv1', 'inception3b_branch3_conv1', 'inception3b_branch4_maxpool1'],
                'output_data_size':[27*27*32*4, 27*27*32*4, 27*27*32*4, 27*27*32*4],
            },
            {
                'layer_name':'inception3b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch1_maxpool1'],
                'output_data_size':[27*27*128*4],
            },
            {
                'layer_name':'inception3b_branch1_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_conv1'],
                'input_data_size':[27*27*128*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*128*4, 13*13*128*4, 13*13*128*4, 13*13*128*4],
            },
            {
                'layer_name':'inception3b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch2_conv2'],
                'output_data_size':[27*27*128*4],
            },
            {
                'layer_name':'inception3b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch2_conv1'],
                'input_data_size':[27*27*128*4],
                'successors':['inception3b_branch2_maxpool1'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'inception3b_branch2_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch2_conv2'],
                'input_data_size':[27*27*192*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*192*4, 13*13*192*4, 13*13*192*4, 13*13*192*4],
            },
            {
                'layer_name':'inception3b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch3_conv2'],
                'output_data_size':[27*27*32*4],
            },
            {
                'layer_name':'inception3b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch3_conv1'],
                'input_data_size':[27*27*32*4],
                'successors':['inception3b_branch3_maxpool1'],
                'output_data_size':[27*27*96*4],
            },
            {
                'layer_name':'inception3b_branch3_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':96,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch3_conv2'],
                'input_data_size':[27*27*96*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*96*4, 13*13*96*4, 13*13*96*4, 13*13*96*4],
            },
            {
                'layer_name':'inception3b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3a_branch1_conv1', 'inception3a_branch2_conv2', 'inception3a_branch3_conv2', 'inception3a_branch4_conv1'],
                'input_data_size':[27*27*64*4, 27*27*128*4, 27*27*32*4, 27*27*32*4],
                'successors':['inception3b_branch4_conv1'],
                'output_data_size':[27*27*256*4],
            },
            {
                'layer_name':'inception3b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':256,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch4_maxpool1'],
                'input_data_size':[27*27*256*4],
                'successors':['inception3b_branch4_maxpool2'],
                'output_data_size':[27*27*64*4],
            },
            {
                'layer_name':'inception3b_branch4_maxpool2',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch4_conv1'],
                'input_data_size':[27*27*64*4],
                'successors':['inception4a_branch1_conv1', 'inception4a_branch2_conv1', 'inception4a_branch3_conv1', 'inception4a_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*192*4, 13*13*192*4, 13*13*192*4, 13*13*192*4],
            },
            {
                'layer_name':'inception4a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':96, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch2_conv2'],
                'output_data_size':[13*13*96*4],
            },
            {
                'layer_name':'inception4a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':96,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':208, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch2_conv1'],
                'input_data_size':[13*13*96*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*208*4, 13*13*208*4, 13*13*208*4, 13*13*208*4],
            },
            {
                'layer_name':'inception4a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':16, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch3_conv2'],
                'output_data_size':[13*13*16*4],
            },
            {
                'layer_name':'inception4a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':16,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':48, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch3_conv1'],
                'input_data_size':[13*13*16*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*48*4, 13*13*48*4, 13*13*48*4, 13*13*48*4],
            },
            {
                'layer_name':'inception4a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':480, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception3b_branch1_maxpool1', 'inception3b_branch2_maxpool1', 'inception3b_branch3_maxpool1', 'inception3b_branch4_maxpool2'],
                'input_data_size':[13*13*128*4, 13*13*192*4, 13*13*96*4, 13*13*64*4],
                'successors':['inception4a_branch4_conv1'],
                'output_data_size':[13*13*480*4],
            },
            {
                'layer_name':'inception4a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':480,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch4_maxpool1'],
                'input_data_size':[13*13*480*4],
                'successors':['inception4b_branch1_conv1', 'inception4b_branch2_conv1', 'inception4b_branch3_conv1', 'inception4b_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*160*4, 13*13*160*4, 13*13*160*4, 13*13*160*4],
            },
            {
                'layer_name':'inception4b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':112, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch2_conv2'],
                'output_data_size':[13*13*112*4],
            },
            {
                'layer_name':'inception4b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':112,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':224, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*224*4, 13*13*224*4, 13*13*224*4, 13*13*224*4],
            },
            {
                'layer_name':'inception4b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':24, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch3_conv2'],
                'output_data_size':[13*13*24*4],
            },
            {
                'layer_name':'inception4b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':24,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4a_branch1_conv1', 'inception4a_branch2_conv2', 'inception4a_branch3_conv2', 'inception4a_branch4_conv1'],
                'input_data_size':[13*13*192*4, 13*13*208*4, 13*13*48*4, 13*13*64*4],
                'successors':['inception4b_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4c_branch1_conv1', 'inception4c_branch2_conv1', 'inception4c_branch3_conv1', 'inception4c_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4c_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*128*4, 13*13*128*4, 13*13*128*4, 13*13*128*4],
            },
            {
                'layer_name':'inception4c_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch2_conv2'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4c_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*256*4, 13*13*256*4, 13*13*256*4, 13*13*256*4],
            },
            {
                'layer_name':'inception4c_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':24, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch3_conv2'],
                'output_data_size':[13*13*24*4],
            },
            {
                'layer_name':'inception4c_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':24,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4c_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4b_branch1_conv1', 'inception4b_branch2_conv2', 'inception4b_branch3_conv2', 'inception4b_branch4_conv1'],
                'input_data_size':[13*13*160*4, 13*13*224*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4c_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4c_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4d_branch1_conv1', 'inception4d_branch2_conv1', 'inception4d_branch3_conv1', 'inception4d_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4d_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':112, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*112*4, 13*13*112*4, 13*13*112*4, 13*13*112*4],
            },
            {
                'layer_name':'inception4d_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':144, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch2_conv2'],
                'output_data_size':[13*13*144*4],
            },
            {
                'layer_name':'inception4d_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':144,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':288, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch2_conv1'],
                'input_data_size':[13*13*112*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*288*4, 13*13*288*4, 13*13*288*4, 13*13*288*4],
            },
            {
                'layer_name':'inception4d_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch3_conv2'],
                'output_data_size':[13*13*32*4],
            },
            {
                'layer_name':'inception4d_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch3_conv1'],
                'input_data_size':[13*13*24*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4d_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':512, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4c_branch1_conv1', 'inception4c_branch2_conv2', 'inception4c_branch3_conv2', 'inception4c_branch4_conv1'],
                'input_data_size':[13*13*128*4, 13*13*256*4, 13*13*64*4, 13*13*64*4],
                'successors':['inception4d_branch4_conv1'],
                'output_data_size':[13*13*512*4],
            },
            {
                'layer_name':'inception4d_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':512,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':64, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch4_maxpool1'],
                'input_data_size':[13*13*512*4],
                'successors':['inception4e_branch1_conv1', 'inception4e_branch2_conv1', 'inception4e_branch3_conv1', 'inception4e_branch4_maxpool1'],
                'output_data_size':[13*13*64*4, 13*13*64*4, 13*13*64*4, 13*13*64*4],
            },
            {
                'layer_name':'inception4e_branch1_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch1_maxpool1'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'inception4e_branch1_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_conv1'],
                'input_data_size':[13*13*256*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*256*4, 6*6*256*4, 6*6*256*4, 6*6*256*4],
            },
            {
                'layer_name':'inception4e_branch2_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch2_conv2'],
                'output_data_size':[13*13*160*4],
            },
            {
                'layer_name':'inception4e_branch2_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':160,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch2_conv1'],
                'input_data_size':[13*13*160*4],
                'successors':['inception4e_branch2_maxpool1'],
                'output_data_size':[13*13*320*4],
            },
            {
                'layer_name':'inception4e_branch2_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':320,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch2_conv2'],
                'input_data_size':[13*13*320*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*320*4, 6*6*320*4, 6*6*320*4, 6*6*320*4],
            },
            {
                'layer_name':'inception4e_branch3_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch3_conv2'],
                'output_data_size':[13*13*32*4],
            },
            {
                'layer_name':'inception4e_branch3_conv2',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch3_conv1'],
                'input_data_size':[13*13*32*4],
                'successors':['inception4e_branch3_maxpool1'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4e_branch3_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch3_conv2'],
                'input_data_size':[13*13*128*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception4e_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':528, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4d_branch1_conv1', 'inception4d_branch2_conv2', 'inception4d_branch3_conv2', 'inception4d_branch4_conv1'],
                'input_data_size':[13*13*64*4, 13*13*128*4, 13*13*32*4, 13*13*32*4],
                'successors':['inception4e_branch4_conv1'],
                'output_data_size':[13*13*528*4],
            },
            {
                'layer_name':'inception4e_branch4_conv1',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':528,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch4_maxpool1'],
                'input_data_size':[13*13*256*4],
                'successors':['inception4e_branch4_maxpool2'],
                'output_data_size':[13*13*128*4],
            },
            {
                'layer_name':'inception4e_branch4_maxpool2',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':128,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch4_conv1'],
                'input_data_size':[13*13*128*4],
                'successors':['inception5a_branch1_conv1', 'inception5a_branch2_conv1', 'inception5a_branch3_conv1', 'inception5a_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5a_branch1_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*256*4, 6*6*256*4, 6*6*256*4, 6*6*256*4],
            },
            {
                'layer_name':'inception5a_branch2_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':160, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch2_conv2'],
                'output_data_size':[6*6*160*4],
            },
            {
                'layer_name':'inception5a_branch2_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':160,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':320, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch2_conv1'],
                'input_data_size':[6*6*160*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*320*4, 6*6*320*4, 6*6*320*4, 6*6*320*4],
            },
            {
                'layer_name':'inception5a_branch3_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':32, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch3_conv2'],
                'output_data_size':[6*6*32*4],
            },
            {
                'layer_name':'inception5a_branch3_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':32,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch3_conv1'],
                'input_data_size':[6*6*32*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5a_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':832, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception4e_branch1_maxpool1', 'inception4e_branch2_maxpool1', 'inception4e_branch3_maxpool1', 'inception4e_branch4_maxpool2'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5a_branch4_conv1'],
                'output_data_size':[6*6*832*4],
            },
            {
                'layer_name':'inception5a_branch4_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch4_maxpool1'],
                'input_data_size':[6*6*832*4],
                'successors':['inception5b_branch1_conv1', 'inception5b_branch2_conv1', 'inception5b_branch3_conv1', 'inception5b_branch4_maxpool1'],
                'output_data_size':[6*6*128*4, 6*6*128*4, 6*6*128*4, 6*6*128*4],
            },
            {
                'layer_name':'inception5b_branch1_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':384, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*384*4],
            },
            {
                'layer_name':'inception5b_branch2_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':192, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch2_conv2'],
                'output_data_size':[6*6*192*4],
            },
            {
                'layer_name':'inception5b_branch2_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':384, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch2_conv1'],
                'input_data_size':[6*6*192*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*384*4],
            },
            {
                'layer_name':'inception5b_branch3_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':48, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch3_conv2'],
                'output_data_size':[6*6*48*4],
            },
            {
                'layer_name':'inception5b_branch3_conv2',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':48,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch3_conv1'],
                'input_data_size':[6*6*48*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*128*4],
            },
            {
                'layer_name':'inception5b_branch4_maxpool1',
                'layer_type':'maxpool',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':832, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5a_branch1_conv1', 'inception5a_branch2_conv2', 'inception5a_branch3_conv2', 'inception5a_branch4_conv1'],
                'input_data_size':[6*6*256*4, 6*6*320*4, 6*6*128*4, 6*6*128*4],
                'successors':['inception5b_branch4_conv1'],
                'output_data_size':[6*6*832*4],
            },
            {
                'layer_name':'inception5b_branch4_conv1',
                'layer_type':'cnn',
                'input_height':6,
                'input_width':6,
                'input_channel':832,
                'kernel':1,
                'padding':0,
                'stride':1,
                'output_height':6,
                'output_width':6,
                'output_channel':128, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch4_maxpool1'],
                'input_data_size':[6*6*832*4],
                'successors':['fully_connected'],
                'output_data_size':[6*6*128*4],
            },
            {
                'layer_name':'fully_connected',
                'layer_type':'fc',
                'is_first_fc':True,
                'input_height':6,
                'input_width':6,
                'input_channel':1024,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.38,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['inception5b_branch1_conv1', 'inception5b_branch2_conv2', 'inception5b_branch3_conv2', 'inception5b_branch4_conv1'],
                'input_data_size':[6*6*384*4, 6*6*384*4, 6*6*128*4, 6*6*128*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
    {
        'model_name':'AlexNet',
        'deadline':0.08, # second
        'layers':[
            {
                'layer_name':'conv1',
                'layer_type':'cnn',
                'input_height':224,
                'input_width':224,
                'input_channel':3,
                'kernel':11,
                'padding':5,
                'stride':4,
                'output_height':56,
                'output_width':56,
                'output_channel':64,
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':[],
                'input_data_size':224*224*3,
                'successors':['maxpool1'],
                'output_data_size':[56*56*64*4],
            },
            {
                'layer_name':'maxpool1',
                'layer_type':'maxpool',
                'input_height':56,
                'input_width':56,
                'input_channel':64,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':27,
                'output_width':27,
                'output_channel':64, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv1'],
                'input_data_size':[56*56*64*4],
                'successors':['conv2'],
                'output_data_size':[27*27*64*4],
            },
            {
                'layer_name':'conv2',
                'layer_type':'cnn',
                'input_height':27,
                'input_width':27,
                'input_channel':64,
                'kernel':5,
                'padding':2,
                'stride':1,
                'output_height':27,
                'output_width':27,
                'output_channel':192, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool1'],
                'input_data_size':[27*27*64*4],
                'successors':['maxpool2'],
                'output_data_size':[27*27*192*4],
            },
            {
                'layer_name':'maxpool2',
                'layer_type':'maxpool',
                'input_height':27,
                'input_width':27,
                'input_channel':192,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':13,
                'output_width':13,
                'output_channel':192, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv2'],
                'input_data_size':[27*27*192*4],
                'successors':['conv3'],
                'output_data_size':[13*13*192*4],
            },
            {
                'layer_name':'conv3',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':192,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':384, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool2'],
                'input_data_size':[13*13*192*4],
                'successors':['conv4'],
                'output_data_size':[13*13*384*4],
            },
            {
                'layer_name':'conv4',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':384,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv3'],
                'input_data_size':[13*13*384*4],
                'successors':['conv5'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'conv5',
                'layer_type':'cnn',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':1,
                'stride':1,
                'output_height':13,
                'output_width':13,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv4'],
                'input_data_size':[13*13*256*4],
                'successors':['maxpool3'],
                'output_data_size':[13*13*256*4],
            },
            {
                'layer_name':'maxpool3',
                'layer_type':'maxpool',
                'input_height':13,
                'input_width':13,
                'input_channel':256,
                'kernel':3,
                'padding':0,
                'stride':2,
                'output_height':6,
                'output_width':6,
                'output_channel':256, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['conv5'],
                'input_data_size':[13*13*256*4],
                'successors':['fc1'],
                'output_data_size':[6*6*256*4],
            },
            {
                'layer_name':'fc1',
                'layer_type':'fc',
                'is_first_fc':True,
                'input_height':6,
                'input_width':6,
                'input_channel':256,
                'output_height':1,
                'output_width':1,
                'output_channel':4096, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['maxpool3'],
                'input_data_size':[6*6*256*4],
                'successors':['fc2'],
                'output_data_size':[4096*4],
            },
            {
                'layer_name':'fc2',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':4096,
                'output_height':1,
                'output_width':1,
                'output_channel':4096, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['fc1'],
                'input_data_size':[4096*4],
                'successors':['fc3'],
                'output_data_size':[4096*4],
            },
            {
                'layer_name':'fc3',
                'layer_type':'fc',
                'is_first_fc':False,
                'input_height':1,
                'input_width':1,
                'input_channel':4096,
                'output_height':1,
                'output_width':1,
                'output_channel':1000, 
                'workload_size':0.76,
                'memory':(1.173+random.uniform(0.,0.276))*1024*1024*1024,
                'predecessors':['fc2'],
                'input_data_size':[4096*4],
                'successors':[],
                'output_data_size':1000*4,
            },
        ]
    },
]